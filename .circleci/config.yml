defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8.11.1


# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
    
      # run builds!
      - run: 
          name: Build
          command: npm run build

      - store_artifacts:
          path: ~/repo/dist

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: ~/repo/
          paths:
            - dist
  deploy:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints:
            # - "dd:6e:c3:a5:8a:ac:50:27:de:df:ee:71:0c:bb:00:2c"
      - attach_workspace: 
          at: ~/repo/dist
      - run:
          name: Keyscan Github (HACK)
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run:
          name: Deploy to Github Pages
          command: |
            cd ./dist/dist 
            git config --global user.email "bot@frankwei.xyz"
            git config --global user.name "Circle CI Deploy Bot"
            echo "eth.cryptohero.pro" >> CNAME # add custom domain
            git init
            git add .
            git commit -m "Update website"
            # git push --force --quiet git@github.com:Andoromeda-Foundation/cryptohero-eth-site.git master:master
  deploy-testing:
    <<: *defaults
    steps:
      - attach_workspace: 
          at: ~/repo/dist
      - run:
          # I don't want to bother with Github Page Deployment again. 
          # I am a front end hipster after all. ~_^
          name: Deploy to Surge.sh
          command: |
            sudo npm i -g surge          
            cd ./dist/dist/
            surge --project ./ --domain mountai-preview.etherfen.com


workflows:
  version: 2
  build-test:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - /master/
                - /testing/
  build-and-deploy-testing:
    jobs:
      - build:
          filters:
            branches:
              only: /testing/
      - deploy-testing:
          requires:
            - build
          filters:
            branches:
              only: /testing/
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /master/
      # - deploy:
      - deploy-testing:
          requires:
            - build
          filters:
            branches:
              only: /master/
